<!--
/**
 * 
 * Copyright 2015 Credit Mutuel Arkea
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and 
 * limitations under the License.
 * 
 */
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
	<script type="text/javascript" src="${resURL}/plugin/openstack-heat/js/renderHOT.js"></script>
	<j:set var="UID" value="${h.generateId()}"/>
	<script type="text/javascript">
		
		function getBundle${UID}() {
			var selHot = document.getElementById('selectHotName${UID}');
			if(selHot.selectedIndex == 0) {
				document.getElementById('envContent${UID}').innerHTML='';
			} else {
				var hotName = selHot.options[selHot.selectedIndex].value;
				var hp =  <st:bind value="${descriptor}"/>

				hp.getParameters(hotName, function(t) {
					var params = t.responseObject();
					if(params == null) {
						alert('${%HOTPlayer.body.empty}');
					} else {
						document.getElementById('envContent${UID}').value=params;
					}
				});
			}
		}
	</script>

	<j:set var="projects" value="${descriptor.projects}"/>
    <j:choose>
    	<j:when test="${size(projects) == 1}">
    		<f:invisibleEntry>
				<f:textbox field="project" value="${projects.get(0).getProject()}" />
    		</f:invisibleEntry>
    	</j:when>
    	<j:otherwise>
			<j:set var="project" value="${instance.project}"/>
    		<f:entry name="Project" title="${%HOTPlayer.project.title}" field="project" >
				<select class="setting-input" name="project">
    				<j:forEach var="item" items="${descriptor.projects}">
						<f:option selected="${item.project == project}">${item.project}</f:option>
					</j:forEach>
    			</select>
    		</f:entry>
    	</j:otherwise>
    </j:choose>
   	<f:entry title="${%HOTPlayer.hot.title}">
   		<j:choose>
    		<j:when test="${size(descriptor.HotItems) == 0}">
    			<f:readOnlyTextbox value="${%HOTPlayer.list.empty}" />
    		</j:when>
    		<j:otherwise>
				<j:set var="selectedHot" value="${instance.hotName}"/>
				<select class="setting-input" name="hotName" id="selectHotName${UID}" onchange="getBundle${UID}()">
					<f:option selected="true">${%HOTPlayer.select.hot}</f:option>
					<j:forEach var="item" items="${descriptor.HotItems}">
						<f:option selected="${item == selectedHot}">${item}</f:option>
		            </j:forEach>
		    	</select>
		 	</j:otherwise>
    	</j:choose>
	</f:entry>
	<f:entry title="${%HOTPlayer.env.title}">
		<f:textarea name="envContent" value="${instance.envContent}" id="envContent${UID}" />
	</f:entry>
	<f:entry title="${%HOTPlayer.env.stack.name}">
		<f:textbox name="envStackName" value="${instance.envStackName}" />
	</f:entry>
	<f:block>
		<f:checkbox title="${%HOTPlayer.delete.exist}" name="deleteExist" checked="${instance.deleteExist}" />
	</f:block>
	<f:block>
		<f:checkbox title="${%HOTPlayer.debug}" name="debug" checked="${instance.debug}" />
	</f:block>
 </j:jelly>